{"version":3,"sources":["services/careersService.js","services/assignaturesService.js","components/Loading.jsx","views/Login.jsx","services/loginService.js","views/WithoutPosition.jsx","components/Note.jsx","views/Results.jsx","components/CareerSelect.jsx","components/AssignatureSelect.jsx","views/Search.jsx","views/Upload.jsx","views/Contact.jsx","views/components/MenuOptions.jsx","components/Logo.jsx","views/Home.jsx","Routers/RootRouter.jsx","App.jsx","serviceWorker.js","index.js","config.js","services/RESTClient.js","services/notesService.js"],"names":["restclient","RESTClient","getAllCareers","get","getCareer","careerId","getAllAssignatures","getAssignature","assignatureId","getAssignatureByCareer","Loading","Row","className","Spinner","animation","variant","Login","props","state","redirect","undefined","login","bind","this","to","Container","Jumbotron","navigator","geolocation","getCurrentPosition","position","lonlat","lat","coords","latitude","lon","longitude","console","log","fetch","config","serverURI","method","mode","data","then","response","json","loginIn","isLogged","setState","error","dir","window","location","href","enableHighAccuracy","maximumAge","Component","WithoutPosition","Note","fa_extension","Card","Accordion","Toggle","as","Header","eventKey","index","Col","style","filename","extension","Collapse","Body","description","Button","url","extensions","word","excel","slide","text","video","audio","compressed","pdf","book","imgs","code","fas","type","includes","getNoteByAssignature","require","Results","results","length","generateNotes","searchParams","getParams","assignature","catch","err","params","URLSearchParams","search","param","notes","forEach","note","push","CareerSelect","careers","isLoading","isError","errorMsj","toString","Fragment","Autocomplete","id","options","onChange","event","newValue","getOptionLabel","option","name","renderInput","TextField","fullWidth","label","placeholder","InputProps","endAdornment","CircularProgress","color","size","Portal","Snackbar","open","autoHideDuration","onClose","elevation","severity","AssignatureSelect","assignatures","disabled","prevProps","prevState","anchorOrigin","vertical","horizontal","Search","career","newCareer","newAssignature","onClick","Upload","filesSelected","isUploading","loaded","errorMSj","upLoad","file","filteredFiles","Array","from","filter","element","split","fileExtension","replace","fileDescription","FormData","append","uploadFile","isLoaded","map","IconButton","component","deleteFile","htmlFor","Alert","renderLabel","width","marginTop","multiline","rows","target","value","handleFiles","files","Contact","subject","msg","msgSended","sendMsg","checkEmail","Form","Group","Label","Control","required","e","formData","body","email","match","React","MenuOptions","List","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","Logo","urlRedirect","alt","src","Home","openSidebar","path","AppBar","Toolbar","edge","aria-label","Drawer","exact","withRouter","RootRouter","WrapperLogin","WrapperNoPosition","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","currentApiVersion","axios","apiURI","apiUri","endpoint","filters","urlEndpoint","getFiltersUrl","Error","post","_isAMomentObject","toISOString","result","parseFilterValue","join","getAllNotes"],"mappings":"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","file":"static/js/main.2a8742c5.chunk.js","sourcesContent":["import RESTClient from './RESTClient';\nconst restclient = new RESTClient();\n\n\nexport const getAllCareers = () => restclient.get('career');\nexport const getCareer = (careerId) => restclient.get('career', careerId);\n","import RESTClient from './RESTClient';\nconst restclient = new RESTClient();\n\nexport const getAllAssignatures = () => restclient.get('assignature');\nexport const getAssignature = (assignatureId) => restclient.get('assignature', assignatureId);\nexport const getAssignatureByCareer = (careerId) => restclient.get('assignature', careerId);\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\n\nconst Loading = () => {\n    return(\n        <Row className=\"justify-content-center\">\n          <Spinner animation=\"border\" variant=\"primary\"/>\n        </Row>);\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport Loading from '../components/Loading.jsx';\nimport { Container, Jumbotron, Row } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\n\nimport { loginIn } from '../services/loginService';\n\nexport default class Login extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n          redirect: undefined,\n        }\n        this.login = this.login.bind(this);\n    }\n\n    render(){\n      if( this.state.redirect )\n          return <Redirect to={this.state.redirect} />\n      return (\n        <Container>\n          <Jumbotron>\n            <Row className=\"justify-content-center\">\n              <h5>Detectando ubicación...</h5>\n            </Row>\n            <Loading />\n          </Jumbotron>\n        </Container>);\n    }\n\n    componentDidMount() {\n      this.login();\n    }\n\n    login() {\n      let gpsOptions = {\n        enableHighAccuracy: true,\n        maximumAge: 3600000\n      };\n\n      navigator.geolocation.getCurrentPosition((position) => {\n        const lonlat = {\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        }\n\n      console.log(\"login...\")\n        \n        loginIn(lonlat).then(response => {\n          console.log(response);\n          if( response.isLogged ) {\n            this.setState({'redirect':'/home/search'});\n          }\n        });\n      }, (error) => {\n        console.dir(error);\n        window.location.href = '/no-position-accepted'\n      }, gpsOptions);\n      \n    }\n\n}","import RESTClient from './RESTClient';\nimport config from './../config'\nconst restclient = new RESTClient();\n\n/* export const loginIn = position => restclient.signIn(position); */\nexport const loginIn = position => fetch(`${config.serverURI}/login`, {\n    method: 'POST',\n    mode: 'cors',\n    data: position\n}).then( response => response.json() );\n\n\n    \n\n","import './styles/without_position.css';\nimport React, { Component } from 'react';\n\nimport { Container, Jumbotron, Row } from 'react-bootstrap';\n\nconst WithoutPosition = () => (\n  <Container>\n    <Jumbotron>\n      <Row className=\"justify-content-center\">\n        <h5>Sin ubicación detectada</h5>\n      </Row>\n      <Row className=\"description-row\">\n        <span>Por favor intente de nuevo y acepte la petición de acceso a su ubicación</span>\n      </Row>\n    </Jumbotron>\n  </Container>\n);\n\nexport default WithoutPosition;","import React, { Component } from 'react';\nimport { Container, Row, Col, Card, Button, Accordion } from \"react-bootstrap\";\nimport './styles/note.css'\n/* import Button from '@material-ui/core/Button'; */\n\nexport default class Note extends Component {\n    \n    constructor(props){\n        super(props)\n\n        this.state = {\n            fa_extension: \"fa fa-file-o\"\n        }\n\n        /* this.extensionToFontAwesome = {\n            \"pdf\": \"fa fa-file-pdf-o\"\n        } */\n    }\n    render(){\n        return (\n            <Card className=\"mb-4\">\n                <Accordion.Toggle as={Card.Header} eventKey={this.props.index}>\n                    <Row>\n                        <Col>\n                        <i className={this.state.fa_extension} style={{\"fontSize\":\"4em\"}}></i>\n                        </Col>\n                        <Col className=\"my-auto\">\n                        <h5>{`${this.props.filename}.${this.props.extension}`}</h5>  \n                        </Col>\n                    </Row>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={this.props.index}>\n                    <Card.Body>\n                        <Row>\n                            {this.props.description}\n                        </Row>    \n                        <Row className=\"mt-3\">\n                            <Button variant='info' href={this.props.url}>Descargar</Button>\n                        </Row>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        )\n    }\n\n    componentDidMount(){\n\n        let extensions = {\n            word : ['doc', 'docx', 'odt'],\n            excel : ['xls', 'xlsx', 'csv', 'xps'],\n            slide : ['ppt', 'pptx', 'pps', 'ppsx', 'odp'],\n            text : ['txt', 'md', 'markdown'],\n            video : ['mp4', 'avi', '3gp', 'wmv'],\n            audio : ['mp3', 'm4a', 'ogg', 'aac', '3gpp'],\n            compressed : ['zip', 'rar'],\n            pdf : ['pdf'],\n            book : ['epub'],\n            imgs : ['jpg', 'jpeg', 'jfif', 'png', 'webp', 'gif', 'bmp', 'dib', 'tif', 'tiff', 'svg'],\n            code : ['py', 'java', 'jar', 'c', 'cpp', 'go', 'asm', 'js', 'html', 'css', 'sass']\n        }\n\n        let fas = {\n            word : 'fa fa-file-word-o',\n            excel: 'fa fa-file-excel-o',\n            slide: 'fa fa-file-powerpoint-o',\n            text: 'fa fa-file-text-o',\n            video: 'fa fa-file-video-o',\n            audio: 'fa fa-file-audio-o',\n            compressed: 'fa fa-file-zip-o',\n            pdf: 'fa fa-file-pdf-o',\n            book: 'fa fa-book',\n            imgs: 'fa fa-file-picture-o',\n            code: 'fa fa-file-code-o'\n        }\n\n        for(const type in extensions)\n            if( extensions[type].includes( this.props.extension ) )\n                this.setState({fa_extension: fas[type]})\n        \n    }\n\n}","import './styles/results.css';\nimport React, { Component } from 'react';\nimport { Container, Row, Jumbotron } from \"react-bootstrap\";\nimport Loading from \"../components/Loading.jsx\";\nimport Note from '../components/Note';\nimport { Accordion } from 'react-bootstrap';\n\n\nconst { getNoteByAssignature } = require('../services/notesService');\n\nclass Results extends Component {\n  constructor(props){\n    super(props)\n    \n    this.state = {\n      results: null\n    }\n  }\n  \n  render() {\n    const { results } = this.state;\n    return !results ?\n      <Container>\n        <Jumbotron>\n          <Row className=\"justify-content-center\">\n            <h5>Buscando apuntes</h5>\n          </Row>\n          <Loading />\n        </Jumbotron>\n      </Container> :\n      <Container>\n        <Jumbotron>\n          <Row className=\"justify-content-center my-3\">\n            <h4>{results && results.length ? 'Apuntes encontrados' : 'Materia sin apuntes'}</h4>\n          </Row>\n          <Accordion>\n              {this.generateNotes()}\n          </Accordion>\n        </Jumbotron>\n      </Container>\n  }\n\n  componentDidMount() {\n    const searchParams = this.getParams();\n    if (searchParams.assignature) {\n      getNoteByAssignature(searchParams.assignature)\n        .then(response => {\n          this.setState({\n            results: response.data,\n          });\n        })\n        .catch((err) => {\n          //handle somehow this error\n        });\n    }\n  }\n\n  getParams() {\n    const params = {};\n    const searchParams = new URLSearchParams(window.location.search)\n\n    for (let param of searchParams)\n      params[param[0]] = param[1];\n    return params\n  }\n\n  generateNotes(){\n    let notes = []\n    const { results } = this.state;\n    results.forEach((note, index) => \n      notes.push(\n        <Note \n          filename={note.filename} \n          extension={note.extension} \n          description={note.description}\n          url={note.url}\n          index={index} />));\n\n    return notes;\n  }\n  \n}\n\nexport default Results;","import React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Portal from \"@material-ui/core/Portal\";\n\nconst { getAllCareers } = require('../services/careersService');\n\nclass CareerSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      careers: [],\n      isLoading: true,\n      isError: false,\n      errorMsj: '',\n    };\n  }\n\n  componentDidMount() {\n    getAllCareers()\n      .then(response => {\n        this.setState({\n          careers: response.data,\n          isLoading: false,\n        });\n    })\n    .catch((err) => {\n      this.setState({\n        isError: true,\n        isLoading: false,\n        errorMsj: err.toString(),\n      })\n    });\n  }\n\n  render() {\n    const { careers, isLoading, isError, errorMsj } = this.state;\n    const Alert = (props) => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    return(\n      <React.Fragment>\n        <Autocomplete\n          id=\"career-select\"\n          className=\"career-select\"\n          options={careers}\n          onChange={(event, newValue) => this.props.onChange && this.props.onChange(event, newValue)}\n          getOptionLabel={option => option.name}\n          renderInput={params => (\n            <TextField fullWidth\n              {...params}\n              label=\"Carrera\"\n              placeholder=\"Seleccione una carrera\"\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n            />\n          )}  \n          />\n        <Portal>\n          <Snackbar open={isError} autoHideDuration={6000} onClose={() => this.setState({ isError: false, })}>\n            <Alert onClose={() => this.setState({ isError: false })} severity=\"error\">{errorMsj}</Alert>\n          </Snackbar>\n        </Portal>\n      </React.Fragment>)\n  }\n}\n\nexport default CareerSelect;","import React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Portal from \"@material-ui/core/Portal\";\n\nconst { getAssignatureByCareer } = require('../services/assignaturesService');\n\nclass AssignatureSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      assignatures: [],\n      isLoading: false,\n      disabled: true,\n      isError: false,\n      errorMsj: '',\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.careerId !== this.props.careerId && this.props.careerId) {\n      this.setState({\n        disabled: false,\n        isLoading: true,\n      }, () => {\n        getAssignatureByCareer(this.props.careerId)\n          .then(response => {\n            this.setState({\n              assignatures: response.data,\n              isLoading: false,\n            })\n          })\n          .catch((err) => {\n            this.setState({\n              isLoading: false,\n              isError: true,\n              errorMsj: err.toString(),\n            })\n          })\n      })\n    }\n  }\n\n  render() {\n    const { assignatures, isLoading, disabled, isError, errorMsj } = this.state;\n    const Alert = (props) => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    return(\n      <React.Fragment>\n        <Autocomplete\n          disabled={disabled}\n          id=\"assignature-select\"\n          className=\"assignature-select\"\n          options={assignatures}\n          onChange={(event, newValue) => this.props.onChange && this.props.onChange(event, newValue)}\n          getOptionLabel={option => option.name}\n          renderInput={params => (\n            <TextField fullWidth\n              {...params}\n              label=\"Materia\"\n              placeholder=\"Seleccione una materia\"\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n            />\n          )} \n          />\n        <Portal>\n          <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }} open={isError} autoHideDuration={600000} onClose={() => this.setState({ isError: false, })}>\n            <Alert onClose={() => this.setState({ isError: false })} severity=\"error\">{errorMsj}</Alert>\n          </Snackbar>\n        </Portal>\n      </React.Fragment>)\n  }\n}\n\nexport default AssignatureSelect;","import './styles/search.css';\nimport React, { Component } from 'react';\n\nimport { Container, Jumbotron } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\n\nimport CareerSelect from '../components/CareerSelect';\nimport AssignatureSelect from '../components/AssignatureSelect';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      career: null,\n      assignature: null,\n    }\n\n  }\n\n  render() {\n    const { career, assignature } = this.state;\n    return(\n      <Container>\n        <Jumbotron>\n          <div className=\"search-form-container\">\n            <div className=\"form-selects-row\">\n              <CareerSelect \n                onChange={(event, newCareer) => this.setState({ career: newCareer, isLoading: true })} />\n              <AssignatureSelect\n                careerId={career ? career.id : null}\n                onChange={(event, newAssignature) => this.setState({ assignature: newAssignature })} />\n            </div>\n            <div className=\"from-action-container\">\n              <div className=\"float-right\">\n                <Button\n                  className=\"search-button\"\n                  disabled={!career || !assignature} \n                  variant=\"contained\" \n                  color=\"primary\"\n                  onClick={() => window.location.href = `/home/results?assignature=${assignature.id}`} \n                >Buscar\n                </Button>\n              </div>  \n            </div>\n          </div>\n        </Jumbotron>\n      </Container>\n    )\n  }\n}\n\nexport default Search;","import './styles/upload.css';\nimport React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReactFileReader from 'react-file-reader';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Portal from \"@material-ui/core/Portal\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Container, Jumbotron } from \"react-bootstrap\";\n\nimport CareerSelect from '../components/CareerSelect';\nimport AssignatureSelect from '../components/AssignatureSelect';\nimport Loading from '../components/Loading';\n\nimport { uploadFile } from './../services/notesService'\n\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filesSelected: [],\n      career: null,\n      assignature: null,\n      isLoading: false,\n      isUploading: false,\n      loaded: false,\n      isError: false,\n      errorMSj: '',\n    }\n\n    this.upLoad = this.upLoad.bind(this)\n\n  }\n\n  deleteFile(file) {\n    const { filesSelected } = this.state;\n    const copiedFiles = Array.from(filesSelected);\n    const filteredFiles = copiedFiles.filter(element => element.name != file.name);\n    \n    this.setState({\n      filesSelected: filteredFiles,\n    });\n  }\n\n  upLoad() {\n      this.setState({\n        isUploading: true,\n      }, () => {\n        let filename = this.state.filesSelected[0].name.split('.');\n        let fileExtension = filename[1];\n        filename = filename[0].replace(\" \", \"_\");;\n        let fileDescription = this.state.fileDescription\n  \n        const data = new FormData();\n        data.append('filename', filename);\n        data.append('extension', fileExtension);\n        data.append('description', fileDescription);\n        data.append('assignatureid', this.state.assignature.id);\n        data.append(filename, this.state.filesSelected[0], filename);\n        \n        uploadFile(data)\n          .then(response => {\n            this.setState({\n              filesSelected: [],\n              isLoaded: true,\n              isUploading: false,\n            });\n          })\n          .catch((err) => {\n            this.setState({\n              filesSelected: [],\n              isLoaded: false,\n              isUploading: false,\n              isError: true,\n              errorMsj: err.toString(),\n            });\n          });\n      })\n  }\n\n  renderLabel() {\n    const { filesSelected } = this.state;\n    if (!filesSelected || !filesSelected.length) {\n      return(\n        <React.Fragment>\n          <label htmlFor=\"real-apunte-btn\">Seleccione un archivo..</label>\n          <br/>\n        </React.Fragment>)\n    }\n    return (\n      <React.Fragment>\n        {filesSelected.map(file =>\n          <React.Fragment>\n            <label>{file.name}</label>\n            <IconButton \n              className=\"delete-button\"\n              color=\"primary\"  \n              component=\"span\"\n              onClick={() => this.deleteFile(file)}>\n              <DeleteIcon />\n            </IconButton>\n            <br />\n          </React.Fragment> )}\n        {/* <label>Selecciona otro archivo</label> */}\n      </React.Fragment>)\n  }\n  \n  render() {\n    const { career, isLoaded, isError, errorMsj, isUploading, filesSelected, assignature } = this.state;\n    const Alert = (props) => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    return isUploading ? <Loading /> :\n      (<Container>\n        <Jumbotron>\n          <div className=\"upload-form-container\">\n            <div className=\"form-selects-row\">\n              <CareerSelect \n                onChange={(event, newCareer) => this.setState({ career: newCareer, isLoading: true })} />\n              <AssignatureSelect\n                careerId={career ? career.id : null}\n                onChange={(event, newAssignature) => this.setState({ assignature: newAssignature })} />\n            </div>\n            <div className=\"form-selects-row\">\n              { this.renderLabel() }\n              {filesSelected.length ? \n              <TextField\n                style={{width: '100%', marginTop:'1%'}}\n                id=\"description\"\n                label=\"Descripción\"\n                multiline\n                rows=\"3\"\n                variant=\"outlined\"\n                onChange={ (event) => this.setState({fileDescription: event.target.value})}\n              /> : null}\n            </div>\n            <div className=\"from-action-container\">\n              <br />\n              <ReactFileReader disabled={filesSelected.length} handleFiles={(files) => this.setState(prevState => ({ filesSelected: [...files, ...prevState.filesSelected] }))}>\n                <Button\n                  className=\"search-button\" \n                  color=\"primary\" \n                  disabled={filesSelected.length}>Buscar..</Button>\n              </ReactFileReader>\n              <div className=\"float-right\">\n                <Button \n                  variant=\"contained\" \n                  color=\"secondary\" \n                  onClick={this.upLoad} \n                  disabled={isUploading || !assignature  || !filesSelected.length} >Subir</Button>\n              </div>      \n            </div>\n            <Portal>\n              <Snackbar \n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }} \n                open={isError} \n                autoHideDuration={600000} \n                onClose={() => this.setState({ isError: false, })}>\n                <Alert \n                  onClose={() => this.setState({ isError: false })} \n                  severity=\"error\">{errorMsj}</Alert>\n              </Snackbar>\n              <Snackbar \n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }} \n                open={isLoaded} \n                autoHideDuration={600000} \n                onClose={() => this.setState({ isLoaded: false, })}>\n                <Alert \n                  onClose={() => this.setState({ isError: false })} \n                  severity=\"success\">\"El archivo se cargo exitosamente!\"</Alert>\n              </Snackbar>\n            </Portal>\n          </div>\n        </Jumbotron>\n      </Container>)\n  }\n}\n\nexport default Upload;","import React from 'react';\nimport { Container, Jumbotron, Form } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport config from './../config'\n\nexport default class Contact extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            from: \"\",\n            subject: \"\",\n            msg: \"\",\n            msgSended: false\n        }\n\n        this.sendMsg = this.sendMsg.bind(this);\n        this.checkEmail = this.checkEmail.bind(this);\n    }\n\n    render(){\n        return (\n            <Container>\n                <Jumbotron>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control name=\"from\" id=\"from\" type=\"email\" required=\"true\" value={this.state.from} onChange={ e => this.setState({from:e.target.value}) }/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Asunto</Form.Label>\n                            <Form.Control name=\"subject\" id=\"subject\" type=\"text\" required=\"true\" value={this.state.subject} onChange={ e => this.setState({subject:e.target.value}) }/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Mensaje</Form.Label>\n                            <Form.Control name=\"msg\" id=\"msg\" as=\"textarea\" rows=\"4\" required=\"true\" value={this.state.msg} onChange={ e => this.setState({msg:e.target.value}) }/>\n                        </Form.Group>\n                        <div className=\"row justify-content-end\">\n                            <Button\n                            variant=\"contained\" \n                            color=\"primary\"\n                            onClick={this.sendMsg}\n                            >Enviar</Button>\n                        </div>\n                    </Form>\n                    <Snackbar \n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }} \n                        open={this.state.msgSended} \n                        autoHideDuration={5000}\n                        onClose={() => this.setState({ msgSended: false })}>\n                        <Alert \n                        onClose={() => this.setState({ msgSended: false })} \n                        severity=\"success\">\"Mensaje enviado exitosamente!\"</Alert>\n                    </Snackbar>\n                </Jumbotron>\n            </Container>\n        )\n    }\n\n    sendMsg(e){\n        if( this.checkEmail(this.state.from) && this.state.subject && this.state.msg ){\n            \n            const formData = new FormData()\n            formData.append('from', this.state.from);\n            formData.append('subject', this.state.subject);\n            formData.append('msg', this.state.msg);\n\n            this.setState({\n                from: \"\",\n                subject: \"\",\n                msg: \"\"\n            })\n\n            fetch(`${config.serverURI}/contact`, {\n                method: 'POST',\n                body: formData\n            }).then( response => response.json() )\n            .then( json => {\n                this.setState({\n                    msgSended: true\n                })  \n                console.log(json);   \n            })\n        }\n        \n    }\n\n    checkEmail(email){\n        var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if( email.match(mailformat) )\n            return true;\n        return false;\n    }\n\n}","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport SearchIcon from '@material-ui/icons/FindInPage';\nimport UploadIcon from '@material-ui/icons/CloudUpload';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst MenuOptions = ({}) => {\n  return (\n    <div>\n      <List>\n          <ListItem button key=\"Buscar\" onClick={() => window.location.href = \"/home/search\"}>\n            <ListItemIcon><SearchIcon /></ListItemIcon>\n            <ListItemText primary=\"Buscar Apuntes\" />\n          </ListItem>\n          <ListItem button key=\"Subir\" onClick={() => window.location.href = \"/home/upload\"}>\n            <ListItemIcon><UploadIcon /></ListItemIcon>\n            <ListItemText primary=\"Subir Apuntes\" />\n          </ListItem>\n          <ListItem button key=\"Contacto\" onClick={() => window.location.href = \"/home/contact\"}>\n            <ListItemIcon><MailIcon /></ListItemIcon>\n            <ListItemText primary=\"Contacto\" />\n          </ListItem>\n        </List>\n        <Divider />\n    </div>)\n}\n\nexport default MenuOptions;","import React from 'react';\nimport './styles/logo.css'\n\nconst Logo = ({urlRedirect = '/home/search'}) => (\n  <div className=\"logo-container\" >\n    <img alt=\"logo\" src=\"./logo.png\" onClick={() => window.location.href = urlRedirect}/>\n  </div>);\n\nexport default Logo;","import './styles/home.css';\n\nimport React, { Component } from 'react';\n\nimport { Switch, Route, withRouter, BrowserRouter, Redirect } from \"react-router-dom\";\n\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Results from './Results'\nimport Search from './Search';\nimport Upload from './Upload';\nimport Contact from './Contact';\n\nimport MenuOptions from './components/MenuOptions';\nimport Logo from '../components/Logo';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      openSidebar: false,\n    }\n  }\n\n  render() {\n    const { openSidebar } = this.state; \n    const path = this.props.match.path;\n    const location = this.props.location;\n    return(\n      <div className=\"layout\">\n        <AppBar \n          className=\"top-bar-menu\"\n        >\n          <Toolbar>\n            <IconButton\n              edge=\"start\" \n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => this.setState({ openSidebar: true })}>\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer \n          className=\"side-bar-menu\"\n          open={openSidebar} \n          onClose={() => this.setState({ openSidebar: false, })}\n        >\n        <div className=\"header-side-bar-menu\" />\n        <div className=\"side-bar-menu-options\">\n          <MenuOptions />\n        </div>\n        </Drawer>\n        <div className=\"layout-container\">\n            <Logo />\n            <BrowserRouter>\n              <Switch location={ location }>\n                <Route exact path={`${path}/`}  component={() => null}/>\n                <Route path={`${path}/search`}  component={Search}/>\n                <Route path={`${path}/results`} component={Results}/>\n                <Route path={`${path}/upload`}  component={Upload}/>\n                <Route path={`${path}/contact`}  component={Contact}/>\n              </Switch>\n            </BrowserRouter>\n          </div>\n      </div>)\n  }\n}\n\nexport default withRouter(Home);","import React, { Component } from 'react';\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\n\nimport Login from '../views/Login';\nimport WithoutPosition from '../views/WithoutPosition';\nimport Home from '../views/Home';\nimport Logo from '../components/Logo';\n\nconst RootRouter = () => {\n  const WrapperLogin = () => (\n    <React.Fragment>\n      <Logo urlRedirect=\"/login\" />\n      <Login />\n    </React.Fragment>\n  )\n  const WrapperNoPosition = () => (\n    <React.Fragment>\n      <Logo urlRedirect=\"/login\" />\n      <WithoutPosition />\n    </React.Fragment>\n  )\n  return (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path={'/'} component={() => <WrapperLogin />} />\n      <Route path={'/login'} component={() => <WrapperLogin />} />\n      <Route path={'/no-position-accepted'} component={() => <WrapperNoPosition />} />\n      <Route path={'/home'} component={Home} />\n      <Redirect to={'/login'} component={() => <WrapperLogin />} />\n    </Switch>\n  </BrowserRouter>);\n}\n\nexport default RootRouter;\n\n\n\n\n","import './App.css';\n\nimport React from 'react';\nimport RootRouter from './Routers/RootRouter';\n\nconst App = () =>\n  <React.Fragment>\n    <RootRouter />;\n  </React.Fragment>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App/>, document.getElementById('app') );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","var config = {\n    serverURI: 'https://repositorio-apuntes-ungs.herokuapp.com',\n    currentApiVersion: '2.0'\n}\n\nexport default config;","import config from './../config'\n\nconst axios = require('axios');\n\nexport default class RESTClient {\n  apiUri = '';\n  constructor(apiURI = `${config.serverURI}/api/${config.currentApiVersion}`) {\n    this.apiURI = apiURI;\n  }\n\n  get(endpoint, id = null, filters = {}) {\n    const urlEndpoint = id ? \n    `${this.apiURI}/${endpoint}/${id}${this.getFiltersUrl(filters)}` : \n    `${this.apiURI}/${endpoint}${this.getFiltersUrl(filters)}`\n\n    return axios.get(urlEndpoint);\n  }\n\n  post(endpoint, data) {\n    if( !(data instanceof FormData) ) {\n      throw new Error('Data must be a instance of FormData');\n    }\n    const urlEndpoint = `${this.apiURI}/${endpoint}`;\n    return axios.post(urlEndpoint, data);\n  }\n\n  signIn(position) {\n    const params = new URLSearchParams();\n    params.append('lat', position.lat);\n    params.append('lon', position.lon);\n    return axios.post(`${config.serverURI}/login`, params);\n  }\n\n  parseFilterValue( value ) {\n    if (value._isAMomentObject){\n      return value.toISOString();\n    }\n    return value;\n  }\n\n  getFiltersUrl(filters) {\n    let result = [];\n    for (var key in filters) {\n      if (filters[key] === undefined) { // what is this case for?\n        result.push(key);\n      }\n      else {\n        result.push(`${key}=${this.parseFilterValue(filters[key])}`);\n      }\n    }\n    return `?${result.join('&')}`;\n  }\n}","import RESTClient from './RESTClient';\nimport config from './../config'\n\nconst restclient = new RESTClient();\n\nexport const getAllNotes = () => restclient.get('note');\nexport const getNoteByAssignature = (assignatureId) => restclient.get('note', assignatureId, {});\nexport const uploadFile = (data) => {\n    if( !(data instanceof FormData) )\n        throw new Error('data isnt instance of FormData')\n\n    return fetch(`${config.serverURI}/api/${config.currentApiVersion}/note`, {\n        method: 'POST',\n        mode: 'cors',\n        body: data\n    })\n}\n"],"sourceRoot":""}